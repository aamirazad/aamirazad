name: Merge Bot

on:
  issue_comment:
    types: [created]

jobs:
  fast-forward-merge:
    if: github.event.issue.pull_request != null && contains(github.event.comment.body, '/merge')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # needed for merge checks
          token: ${{ secrets.PAT }}

      - name: Get PR details
        id: pr
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Extract info
        run: |
          echo "PR_BRANCH=$(jq -r .head.ref <<< '${{ steps.pr.outputs.data }}')" >> $GITHUB_ENV
          echo "BASE_BRANCH=$(jq -r .base.ref <<< '${{ steps.pr.outputs.data }}')" >> $GITHUB_ENV
          echo "PR_TITLE=$(jq -r .title <<< '${{ steps.pr.outputs.data }}')" >> $GITHUB_ENV
          echo "PR_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV

      - name: Fetch all branches
        run: git fetch origin +refs/heads/*:refs/remotes/origin/*

      - name: Check if PR is up to date
        id: up_to_date
        run: |
          git checkout $PR_BRANCH
          git fetch origin $BASE_BRANCH
          if git merge-base --is-ancestor origin/$BASE_BRANCH $PR_BRANCH; then
            echo "result=up_to_date" >> $GITHUB_OUTPUT
          else
            echo "result=outdated" >> $GITHUB_OUTPUT
          fi

      - name: Comment if outdated
        if: steps.up_to_date.outputs.result == 'outdated'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: "‚ö†Ô∏è Cannot fast-forward merge because `${{ env.PR_BRANCH }}` is not up to date with `${{ env.BASE_BRANCH }}`. Please rebase first."

      - name: Set author and committer
        id: git_user
        run: |
          PR_AUTHOR=$(jq -r .user.login <<< '${{ steps.pr.outputs.data }}')
          echo "PR_AUTHOR=$PR_AUTHOR" >> $GITHUB_ENV
          MERGE_COMMENTER=${{ github.event.comment.user.login }}
          echo "MERGE_COMMENTER=$MERGE_COMMENTER" >> $GITHUB_ENV

      - name: Fast-forward merge into base
        if: steps.up_to_date.outputs.result == 'up_to_date'
        run: |
          git checkout $BASE_BRANCH
          PREV_SHA=$(git rev-parse HEAD)
          echo "PREV_SHA=$PREV_SHA" >> $GITHUB_ENV
          git merge --ff-only $PR_BRANCH
          NEW_SHA=$(git rev-parse HEAD)
          echo "NEW_SHA=$NEW_SHA" >> $GITHUB_ENV

      - name: Update CHANGELOG.md and commit
        if: steps.up_to_date.outputs.result == 'up_to_date'
        run: |
          export GIT_AUTHOR_NAME="$PR_AUTHOR"
          export GIT_AUTHOR_EMAIL="$PR_AUTHOR@users.noreply.github.com"
          export GIT_COMMITTER_NAME="$MERGE_COMMITTER"
          export GIT_COMMITTER_EMAIL="$MERGE_COMMITTER@users.noreply.github.com"

          # Update CHANGELOG.md
          echo "- $PR_TITLE (https://github.com/${{ github.repository }}/pull/$PR_NUMBER) [\`$PREV_SHA...$NEW_SHA\`](https://github.com/${{ github.repository }}/compare/$PREV_SHA...$NEW_SHA)" > temp_changelog.md
          cat CHANGELOG.md >> temp_changelog.md
          mv temp_changelog.md CHANGELOG.md

          # Commit and push all changes
          git add CHANGELOG.md
          git commit -m "chore: merge `${PR_TITLE}` (#${PR_NUMBER})"
          git push origin $BASE_BRANCH

      - name: Comment success
        if: steps.up_to_date.outputs.result == 'up_to_date'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            üéâ Successfully fast-forward merged `${{ env.PR_BRANCH }}` into `${{ env.BASE_BRANCH }}`.
            - PR: https://github.com/${{ github.repository }}/pull/${{ env.PR_NUMBER }}
            - Compare: https://github.com/${{ github.repository }}/compare/${{ env.PREV_SHA }}...${{ env.NEW_SHA }}
